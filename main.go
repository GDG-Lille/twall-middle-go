package main

import (
	"net/http"

	"github.com/rs/cors"
	log "github.com/sirupsen/logrus"

	"flag"

	"fmt"

	"github.com/fgruchala/twall-middle-go/service"
	"github.com/fgruchala/twall-middle-go/webservice"
	"github.com/gorilla/mux"
)

func main() {
	// LOG
	log.SetFormatter(&log.TextFormatter{
		ForceColors:   true,
		FullTimestamp: true,
	})

	// ARGS
	port := flag.Int("port", 3002, "Port on which Twall is listening")
	consumerKey := flag.String("consumerKey", "", "Consumer key generated by Twitter. Go https://apps.twitter.com")
	consumerSecret := flag.String("consumerSecret", "", "Consumer secret generated by Twitter. Go https://apps.twitter.com")
	corsOrigin := flag.String("cors", "*", "Access-Control-Allow-Origin")
	flag.Parse()

	// SERVICE
	tweetService := service.NewTweetService(consumerKey, consumerSecret)

	// WEBSERVICE
	router := mux.NewRouter().StrictSlash(true)
	webservice.NewTweetWebservice(router, tweetService)

	// CORS
	c := cors.New(cors.Options{
		AllowedOrigins: []string{*corsOrigin},
		AllowedHeaders: []string{"Origin"}})

	mux := http.NewServeMux()
	mux.Handle("/", router)
	handler := c.Handler(mux)
	log.WithFields(log.Fields{"port": *port}).Info("Starting server ...")
	log.Fatal(http.ListenAndServe(fmt.Sprintf(":%v", *port), handler))
}
